<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>