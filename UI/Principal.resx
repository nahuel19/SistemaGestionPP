<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>